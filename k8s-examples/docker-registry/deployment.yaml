---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  labels:
    app: docker-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-registry
  template:
    metadata:
      labels:
        app: docker-registry
    spec:
      containers:
      - name: docker-registry
        image: registry:2
        imagePullPolicy: IfNotPresent
        envFrom:
        env:
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: REGISTRY_HTTP_TLS_CERTIFICATE
          valueFrom:
            configMapKeyRef:
              name: my-private-registry
              key: REGISTRY_HTTP_TLS_CERTIFICATE
        - name: REGISTRY_HTTP_TLS_KEY
          valueFrom:
            configMapKeyRef:
              name: my-private-registry
              key: REGISTRY_HTTP_TLS_KEY
        - name: REGISTRY_AUTH_HTPASSWD_PATH
          valueFrom:
            configMapKeyRef:
              name: my-private-registry
              key: REGISTRY_AUTH_HTPASSWD_PATH
        - name: REGISTRY_HTTP_HOST
          valueFrom:
            configMapKeyRef:
              name: my-private-registry
              key: REGISTRY_HTTP_HOST
        - name: REGISTRY_AUTH_HTPASSWD_REALM
          value: "Registry Realm"
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: my-private-registry-volume
          mountPath: "/var/lib/registry/auth"  # replace
        - name: certificate-volume
          mountPath: "/var/lib/registry/certs"
        - name: ca-certificate-volume
          mountPath: "/etc/docker/certs.d"
      volumes:
      - name: my-private-registry-volume
        configMap:
          name: my-private-registry
      - name: certificate-volume
        secret:
          secretName: my-private-registry-certificate
      - name: ca-certificate-volume
        secret:
          secretName: ca-certificate
